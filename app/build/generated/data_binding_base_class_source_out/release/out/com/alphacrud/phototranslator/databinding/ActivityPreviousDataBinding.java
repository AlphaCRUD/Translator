// Generated by view binder compiler. Do not edit!
package com.alphacrud.phototranslator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.alphacrud.phototranslator.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPreviousDataBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LottieAnimationView animationView2;

  @NonNull
  public final ImageButton btnBack;

  @NonNull
  public final ImageView ivTT;

  @NonNull
  public final LinearLayout linearAdd;

  @NonNull
  public final LinearLayout linearNo;

  @NonNull
  public final LinearLayout llNativeLarge;

  @NonNull
  public final ProgressBar progressed;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final RelativeLayout rlTT;

  @NonNull
  public final RelativeLayout rlTop;

  @NonNull
  public final TextView tvOpenTT;

  @NonNull
  public final TextView tvTT;

  @NonNull
  public final TextView txtTop;

  private ActivityPreviousDataBinding(@NonNull RelativeLayout rootView,
      @NonNull LottieAnimationView animationView2, @NonNull ImageButton btnBack,
      @NonNull ImageView ivTT, @NonNull LinearLayout linearAdd, @NonNull LinearLayout linearNo,
      @NonNull LinearLayout llNativeLarge, @NonNull ProgressBar progressed,
      @NonNull RecyclerView recyclerView, @NonNull RelativeLayout rlTT,
      @NonNull RelativeLayout rlTop, @NonNull TextView tvOpenTT, @NonNull TextView tvTT,
      @NonNull TextView txtTop) {
    this.rootView = rootView;
    this.animationView2 = animationView2;
    this.btnBack = btnBack;
    this.ivTT = ivTT;
    this.linearAdd = linearAdd;
    this.linearNo = linearNo;
    this.llNativeLarge = llNativeLarge;
    this.progressed = progressed;
    this.recyclerView = recyclerView;
    this.rlTT = rlTT;
    this.rlTop = rlTop;
    this.tvOpenTT = tvOpenTT;
    this.tvTT = tvTT;
    this.txtTop = txtTop;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPreviousDataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPreviousDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_previous_data, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPreviousDataBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.animation_view2;
      LottieAnimationView animationView2 = ViewBindings.findChildViewById(rootView, id);
      if (animationView2 == null) {
        break missingId;
      }

      id = R.id.btnBack;
      ImageButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.ivTT;
      ImageView ivTT = ViewBindings.findChildViewById(rootView, id);
      if (ivTT == null) {
        break missingId;
      }

      id = R.id.linearAdd;
      LinearLayout linearAdd = ViewBindings.findChildViewById(rootView, id);
      if (linearAdd == null) {
        break missingId;
      }

      id = R.id.linearNo;
      LinearLayout linearNo = ViewBindings.findChildViewById(rootView, id);
      if (linearNo == null) {
        break missingId;
      }

      id = R.id.llNativeLarge;
      LinearLayout llNativeLarge = ViewBindings.findChildViewById(rootView, id);
      if (llNativeLarge == null) {
        break missingId;
      }

      id = R.id.progressed;
      ProgressBar progressed = ViewBindings.findChildViewById(rootView, id);
      if (progressed == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.rlTT;
      RelativeLayout rlTT = ViewBindings.findChildViewById(rootView, id);
      if (rlTT == null) {
        break missingId;
      }

      id = R.id.rlTop;
      RelativeLayout rlTop = ViewBindings.findChildViewById(rootView, id);
      if (rlTop == null) {
        break missingId;
      }

      id = R.id.tvOpenTT;
      TextView tvOpenTT = ViewBindings.findChildViewById(rootView, id);
      if (tvOpenTT == null) {
        break missingId;
      }

      id = R.id.tvTT;
      TextView tvTT = ViewBindings.findChildViewById(rootView, id);
      if (tvTT == null) {
        break missingId;
      }

      id = R.id.txtTop;
      TextView txtTop = ViewBindings.findChildViewById(rootView, id);
      if (txtTop == null) {
        break missingId;
      }

      return new ActivityPreviousDataBinding((RelativeLayout) rootView, animationView2, btnBack,
          ivTT, linearAdd, linearNo, llNativeLarge, progressed, recyclerView, rlTT, rlTop, tvOpenTT,
          tvTT, txtTop);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
