// Generated by view binder compiler. Do not edit!
package com.alphacrud.phototranslator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.alphacrud.phototranslator.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityScanResultBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button Trans;

  @NonNull
  public final ImageButton btnBack;

  @NonNull
  public final ImageButton btnshare;

  @NonNull
  public final TextView filterText;

  @NonNull
  public final LinearLayout language;

  @NonNull
  public final LinearLayout linearAdd;

  @NonNull
  public final LinearLayout llNativeLarge;

  @NonNull
  public final ProgressBar progress;

  @NonNull
  public final ProgressBar progressed;

  @NonNull
  public final RelativeLayout rlTop;

  @NonNull
  public final RelativeLayout rltxt;

  @NonNull
  public final RelativeLayout shareTwo;

  @NonNull
  public final ImageView speack;

  @NonNull
  public final EditText txt;

  @NonNull
  public final TextView txt2;

  @NonNull
  public final TextView txtTop;

  @NonNull
  public final View vs;

  private ActivityScanResultBinding(@NonNull RelativeLayout rootView, @NonNull Button Trans,
      @NonNull ImageButton btnBack, @NonNull ImageButton btnshare, @NonNull TextView filterText,
      @NonNull LinearLayout language, @NonNull LinearLayout linearAdd,
      @NonNull LinearLayout llNativeLarge, @NonNull ProgressBar progress,
      @NonNull ProgressBar progressed, @NonNull RelativeLayout rlTop, @NonNull RelativeLayout rltxt,
      @NonNull RelativeLayout shareTwo, @NonNull ImageView speack, @NonNull EditText txt,
      @NonNull TextView txt2, @NonNull TextView txtTop, @NonNull View vs) {
    this.rootView = rootView;
    this.Trans = Trans;
    this.btnBack = btnBack;
    this.btnshare = btnshare;
    this.filterText = filterText;
    this.language = language;
    this.linearAdd = linearAdd;
    this.llNativeLarge = llNativeLarge;
    this.progress = progress;
    this.progressed = progressed;
    this.rlTop = rlTop;
    this.rltxt = rltxt;
    this.shareTwo = shareTwo;
    this.speack = speack;
    this.txt = txt;
    this.txt2 = txt2;
    this.txtTop = txtTop;
    this.vs = vs;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityScanResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityScanResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_scan_result, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityScanResultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Trans;
      Button Trans = ViewBindings.findChildViewById(rootView, id);
      if (Trans == null) {
        break missingId;
      }

      id = R.id.btnBack;
      ImageButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnshare;
      ImageButton btnshare = ViewBindings.findChildViewById(rootView, id);
      if (btnshare == null) {
        break missingId;
      }

      id = R.id.filterText;
      TextView filterText = ViewBindings.findChildViewById(rootView, id);
      if (filterText == null) {
        break missingId;
      }

      id = R.id.language;
      LinearLayout language = ViewBindings.findChildViewById(rootView, id);
      if (language == null) {
        break missingId;
      }

      id = R.id.linearAdd;
      LinearLayout linearAdd = ViewBindings.findChildViewById(rootView, id);
      if (linearAdd == null) {
        break missingId;
      }

      id = R.id.llNativeLarge;
      LinearLayout llNativeLarge = ViewBindings.findChildViewById(rootView, id);
      if (llNativeLarge == null) {
        break missingId;
      }

      id = R.id.progress;
      ProgressBar progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.progressed;
      ProgressBar progressed = ViewBindings.findChildViewById(rootView, id);
      if (progressed == null) {
        break missingId;
      }

      id = R.id.rlTop;
      RelativeLayout rlTop = ViewBindings.findChildViewById(rootView, id);
      if (rlTop == null) {
        break missingId;
      }

      id = R.id.rltxt;
      RelativeLayout rltxt = ViewBindings.findChildViewById(rootView, id);
      if (rltxt == null) {
        break missingId;
      }

      id = R.id.shareTwo;
      RelativeLayout shareTwo = ViewBindings.findChildViewById(rootView, id);
      if (shareTwo == null) {
        break missingId;
      }

      id = R.id.speack;
      ImageView speack = ViewBindings.findChildViewById(rootView, id);
      if (speack == null) {
        break missingId;
      }

      id = R.id.txt;
      EditText txt = ViewBindings.findChildViewById(rootView, id);
      if (txt == null) {
        break missingId;
      }

      id = R.id.txt2;
      TextView txt2 = ViewBindings.findChildViewById(rootView, id);
      if (txt2 == null) {
        break missingId;
      }

      id = R.id.txtTop;
      TextView txtTop = ViewBindings.findChildViewById(rootView, id);
      if (txtTop == null) {
        break missingId;
      }

      id = R.id.vs;
      View vs = ViewBindings.findChildViewById(rootView, id);
      if (vs == null) {
        break missingId;
      }

      return new ActivityScanResultBinding((RelativeLayout) rootView, Trans, btnBack, btnshare,
          filterText, language, linearAdd, llNativeLarge, progress, progressed, rlTop, rltxt,
          shareTwo, speack, txt, txt2, txtTop, vs);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
