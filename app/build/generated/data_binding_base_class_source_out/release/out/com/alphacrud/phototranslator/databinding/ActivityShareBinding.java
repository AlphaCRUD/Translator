// Generated by view binder compiler. Do not edit!
package com.alphacrud.phototranslator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.alphacrud.phototranslator.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityShareBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton btnBack;

  @NonNull
  public final ImageView iv;

  @NonNull
  public final LinearLayout linear;

  @NonNull
  public final RelativeLayout linearDoc;

  @NonNull
  public final RelativeLayout linearsahre;

  @NonNull
  public final LinearLayout llNativeLarge;

  @NonNull
  public final RelativeLayout rlTop;

  @NonNull
  public final TextView txtTop;

  private ActivityShareBinding(@NonNull RelativeLayout rootView, @NonNull ImageButton btnBack,
      @NonNull ImageView iv, @NonNull LinearLayout linear, @NonNull RelativeLayout linearDoc,
      @NonNull RelativeLayout linearsahre, @NonNull LinearLayout llNativeLarge,
      @NonNull RelativeLayout rlTop, @NonNull TextView txtTop) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.iv = iv;
    this.linear = linear;
    this.linearDoc = linearDoc;
    this.linearsahre = linearsahre;
    this.llNativeLarge = llNativeLarge;
    this.rlTop = rlTop;
    this.txtTop = txtTop;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityShareBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityShareBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_share, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityShareBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      ImageButton btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.iv;
      ImageView iv = ViewBindings.findChildViewById(rootView, id);
      if (iv == null) {
        break missingId;
      }

      id = R.id.linear;
      LinearLayout linear = ViewBindings.findChildViewById(rootView, id);
      if (linear == null) {
        break missingId;
      }

      id = R.id.linearDoc;
      RelativeLayout linearDoc = ViewBindings.findChildViewById(rootView, id);
      if (linearDoc == null) {
        break missingId;
      }

      id = R.id.linearsahre;
      RelativeLayout linearsahre = ViewBindings.findChildViewById(rootView, id);
      if (linearsahre == null) {
        break missingId;
      }

      id = R.id.llNativeLarge;
      LinearLayout llNativeLarge = ViewBindings.findChildViewById(rootView, id);
      if (llNativeLarge == null) {
        break missingId;
      }

      id = R.id.rlTop;
      RelativeLayout rlTop = ViewBindings.findChildViewById(rootView, id);
      if (rlTop == null) {
        break missingId;
      }

      id = R.id.txtTop;
      TextView txtTop = ViewBindings.findChildViewById(rootView, id);
      if (txtTop == null) {
        break missingId;
      }

      return new ActivityShareBinding((RelativeLayout) rootView, btnBack, iv, linear, linearDoc,
          linearsahre, llNativeLarge, rlTop, txtTop);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
