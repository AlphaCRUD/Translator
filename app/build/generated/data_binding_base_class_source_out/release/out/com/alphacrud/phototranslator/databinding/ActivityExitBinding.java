// Generated by view binder compiler. Do not edit!
package com.alphacrud.phototranslator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.alphacrud.phototranslator.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityExitBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView icClose;

  @NonNull
  public final ImageView ivIc;

  @NonNull
  public final LinearLayout linear;

  @NonNull
  public final RelativeLayout nativeAd;

  @NonNull
  public final RatingBar ratingBar;

  @NonNull
  public final RelativeLayout rlNo;

  @NonNull
  public final RelativeLayout rlYes;

  @NonNull
  public final TextView tvExit;

  @NonNull
  public final TextView tvRate;

  @NonNull
  public final TextView tvTT;

  private ActivityExitBinding(@NonNull RelativeLayout rootView, @NonNull ImageView icClose,
      @NonNull ImageView ivIc, @NonNull LinearLayout linear, @NonNull RelativeLayout nativeAd,
      @NonNull RatingBar ratingBar, @NonNull RelativeLayout rlNo, @NonNull RelativeLayout rlYes,
      @NonNull TextView tvExit, @NonNull TextView tvRate, @NonNull TextView tvTT) {
    this.rootView = rootView;
    this.icClose = icClose;
    this.ivIc = ivIc;
    this.linear = linear;
    this.nativeAd = nativeAd;
    this.ratingBar = ratingBar;
    this.rlNo = rlNo;
    this.rlYes = rlYes;
    this.tvExit = tvExit;
    this.tvRate = tvRate;
    this.tvTT = tvTT;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityExitBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityExitBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_exit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityExitBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.icClose;
      ImageView icClose = ViewBindings.findChildViewById(rootView, id);
      if (icClose == null) {
        break missingId;
      }

      id = R.id.ivIc;
      ImageView ivIc = ViewBindings.findChildViewById(rootView, id);
      if (ivIc == null) {
        break missingId;
      }

      id = R.id.linear;
      LinearLayout linear = ViewBindings.findChildViewById(rootView, id);
      if (linear == null) {
        break missingId;
      }

      id = R.id.nativeAd;
      RelativeLayout nativeAd = ViewBindings.findChildViewById(rootView, id);
      if (nativeAd == null) {
        break missingId;
      }

      id = R.id.rating_bar;
      RatingBar ratingBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar == null) {
        break missingId;
      }

      id = R.id.rlNo;
      RelativeLayout rlNo = ViewBindings.findChildViewById(rootView, id);
      if (rlNo == null) {
        break missingId;
      }

      id = R.id.rlYes;
      RelativeLayout rlYes = ViewBindings.findChildViewById(rootView, id);
      if (rlYes == null) {
        break missingId;
      }

      id = R.id.tvExit;
      TextView tvExit = ViewBindings.findChildViewById(rootView, id);
      if (tvExit == null) {
        break missingId;
      }

      id = R.id.tvRate;
      TextView tvRate = ViewBindings.findChildViewById(rootView, id);
      if (tvRate == null) {
        break missingId;
      }

      id = R.id.tvTT;
      TextView tvTT = ViewBindings.findChildViewById(rootView, id);
      if (tvTT == null) {
        break missingId;
      }

      return new ActivityExitBinding((RelativeLayout) rootView, icClose, ivIc, linear, nativeAd,
          ratingBar, rlNo, rlYes, tvExit, tvRate, tvTT);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
